{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMX0ANs2XQPKWGCxo3Y6kgc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"pTyA2qFdR72_"},"outputs":[],"source":["# import python library\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import plotly.express as px"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kWVzck_VSTy2","executionInfo":{"status":"ok","timestamp":1716654720277,"user_tz":-360,"elapsed":28814,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"3c5cf5cb-294d-4611-b41c-773bc8252159"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Load Dataset\n","df_full = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Dataset/Titanic.csv')"],"metadata":{"id":"tsTpfej_SVNb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_full"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"9glaXtEDSd5a","executionInfo":{"status":"ok","timestamp":1716654721530,"user_tz":-360,"elapsed":554,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"460474fd-9767-456c-8af5-f4e017d81d29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived  Pclass  \\\n","0              1         0       3   \n","1              2         1       1   \n","2              3         1       3   \n","3              4         1       1   \n","4              5         0       3   \n","..           ...       ...     ...   \n","886          887         0       2   \n","887          888         1       1   \n","888          889         0       3   \n","889          890         1       1   \n","890          891         0       3   \n","\n","                                                  Name     Sex   Age  SibSp  \\\n","0                              Braund, Mr. Owen Harris    male  22.0      1   \n","1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                               Heikkinen, Miss. Laina  female  26.0      0   \n","3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                             Allen, Mr. William Henry    male  35.0      0   \n","..                                                 ...     ...   ...    ...   \n","886                              Montvila, Rev. Juozas    male  27.0      0   \n","887                       Graham, Miss. Margaret Edith  female  19.0      0   \n","888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n","889                              Behr, Mr. Karl Howell    male  26.0      0   \n","890                                Dooley, Mr. Patrick    male  32.0      0   \n","\n","     Parch            Ticket     Fare Cabin Embarked  \n","0        0         A/5 21171   7.2500   NaN        S  \n","1        0          PC 17599  71.2833   C85        C  \n","2        0  STON/O2. 3101282   7.9250   NaN        S  \n","3        0            113803  53.1000  C123        S  \n","4        0            373450   8.0500   NaN        S  \n","..     ...               ...      ...   ...      ...  \n","886      0            211536  13.0000   NaN        S  \n","887      0            112053  30.0000   B42        S  \n","888      2        W./C. 6607  23.4500   NaN        S  \n","889      0            111369  30.0000  C148        C  \n","890      0            370376   7.7500   NaN        Q  \n","\n","[891 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-a28c22e1-6b68-4810-9194-feae1b35858a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Montvila, Rev. Juozas</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211536</td>\n","      <td>13.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Graham, Miss. Margaret Edith</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30.0000</td>\n","      <td>B42</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.4500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Behr, Mr. Karl Howell</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30.0000</td>\n","      <td>C148</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Dooley, Mr. Patrick</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.7500</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows Ã— 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a28c22e1-6b68-4810-9194-feae1b35858a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a28c22e1-6b68-4810-9194-feae1b35858a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a28c22e1-6b68-4810-9194-feae1b35858a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-54f27c60-99a4-483b-8c5a-510b76602130\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54f27c60-99a4-483b-8c5a-510b76602130')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-54f27c60-99a4-483b-8c5a-510b76602130 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c2b03df4-7d0c-46ae-8f13-2edc08b263b9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_full')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c2b03df4-7d0c-46ae-8f13-2edc08b263b9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_full');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_full","summary":"{\n  \"name\": \"df_full\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334042,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df_full['Survived'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7vnysBnpSh5J","executionInfo":{"status":"ok","timestamp":1716654721532,"user_tz":-360,"elapsed":21,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"af0c3a36-cf2b-47d4-8bb8-44786232ed58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Survived\n","0    549\n","1    342\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Plot Target Feature\n","sns.countplot(x='Survived', data=df_full)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"iTo11HO4SyXd","executionInfo":{"status":"ok","timestamp":1716654721533,"user_tz":-360,"elapsed":21,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"c6bff7f6-1254-4965-b632-c906c489f84d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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wwa/9WvWrFFUVJR++OEHSVJpaanuvvtuRUdHKyYmRsOGDdM333zjW19XV6fs7GxFR0erffv2evTRR8WvGwSCD7EDoMVERkYqMjJSa9eulcfjadR7PfbYY5ozZ46+/PJLjRw5Un379tWKFSv81qxYsUJ/+tOfznmt1WrVnXfeqZUrV56zfvjw4Wrbtq1qa2uVmpqqqKgobdu2Tdu3b1dkZKQGDx6smpoaSdJzzz2n/Px8LV26VB999JFOnjypNWvWNOq8ADQ9YgdAiwkNDVV+fr6WL1+u6Oho3XzzzfrrX/+qzz///JLfa/bs2br99tt1zTXXKCYmRhkZGfrXv/7l2//VV1+puLhYGRkZ5319RkaG1q5d6/sUx+12a/369b71q1atUn19vf75z3+qR48e6t69u5YtW6aSkhLfp0zz589XTk6ORowYoe7du2vx4sXcEwQEIWIHQItKT0/X0aNH9fbbb2vw4MHasmWL+vTpo/z8/Et6n759+/o9HzVqlL755hvt3LlT0o+f0vTp00fdunU77+vvuOMOtW7dWm+//bYk6c0335TValVKSook6bPPPtPhw4cVFRXl+0QqJiZG1dXV+vrrr1VZWaljx44pOTnZ956hoaHnzAUg8IgdAC2uTZs2uv322zVjxgzt2LFD9957r2bNmqWQkB//SfrpfS+1tbXnfY927dr5PXc4HBo4cKDv0tTKlSsv+KmO9OMNyyNHjvRbf8899/hudD59+rSSkpK0Z88ev8dXX3113ktjAIIXsQMg4BITE1VVVaWOHTtKko4dO+bb99OblX9JRkaGVq1apaKiIv33v//VqFGjfnH9xo0btW/fPn3wwQd+cdSnTx8dOnRIsbGxuvbaa/0eNptNNptNnTp10q5du3yvOXPmjIqLiy96XgAtg9gB0GJOnDihgQMH6rXXXtPnn3+uI0eOaPXq1Zo7d66GDRumiIgI9evXz3fjcWFhoaZPn37R7z9ixAidOnVKEyZM0IABAxQXF/ez6/v37y+Hw6GMjAx17drV75JURkaGOnTooGHDhmnbtm06cuSItmzZooceekjffvutJOnhhx/WnDlztHbtWh04cEAPPvhgs//QQgCXjtgB0GIiIyOVnJysefPmqX///rrhhhs0Y8YMjR8/Xi+++KIkaenSpTpz5oySkpI0efJkPfXUUxf9/lFRURo6dKg+++yzn72EdZbFYtHo0aPPu75t27baunWrEhISfDcgjxs3TtXV1bJarZKkRx55RGPGjFFmZqacTqeioqL0xz/+8RL+RgC0BIuXHwoBAAAMxic7AADAaMQOAAAwGrEDAACMRuwAAACjETsAAMBoxA4AADAasQMAAIxG7AAAAKMROwAAwGjEDgAAMBqxAwAAjPb/AKOCCK6SkJAQAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["# Filled up missing value with the median\n","Age = df_full['Age'].fillna(value = df_full['Age'].median())"],"metadata":{"id":"vVk4zolwS5yd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Drop unnecessary features\n","df_drop = df_full.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin', 'Embarked', 'Age'], axis=1, inplace=True)"],"metadata":{"id":"O6tbNb1ITDio"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_full"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"oGMBQF9GTON9","executionInfo":{"status":"ok","timestamp":1716654722124,"user_tz":-360,"elapsed":606,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"12891005-22ed-4af7-e63d-9cae1c31245d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Survived  Pclass     Sex     Fare\n","0           0       3    male   7.2500\n","1           1       1  female  71.2833\n","2           1       3  female   7.9250\n","3           1       1  female  53.1000\n","4           0       3    male   8.0500\n","..        ...     ...     ...      ...\n","886         0       2    male  13.0000\n","887         1       1  female  30.0000\n","888         0       3  female  23.4500\n","889         1       1    male  30.0000\n","890         0       3    male   7.7500\n","\n","[891 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-0dd3371a-1444-46ff-b8a3-931c061df10a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>7.2500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>71.2833</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>7.9250</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>53.1000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>8.0500</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>13.0000</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>23.4500</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>7.7500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dd3371a-1444-46ff-b8a3-931c061df10a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0dd3371a-1444-46ff-b8a3-931c061df10a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0dd3371a-1444-46ff-b8a3-931c061df10a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9f8cfbc4-fdde-424b-a966-56b8955522bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f8cfbc4-fdde-424b-a966-56b8955522bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9f8cfbc4-fdde-424b-a966-56b8955522bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8734ce48-baf4-4cec-9721-3207f05d0f15\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_full')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8734ce48-baf4-4cec-9721-3207f05d0f15 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_full');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_full","summary":"{\n  \"name\": \"df_full\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Concate Age with filled values\n","df = pd.concat([df_full, Age], axis=1)"],"metadata":{"id":"hD4NLb9STY5G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply One Hot Encoder for Sex feature\n","from sklearn.preprocessing import OneHotEncoder\n","ohe = OneHotEncoder(drop='first', sparse=False, dtype=np.int32)"],"metadata":{"id":"ca9frw9JTfm2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_ohe = ohe.fit_transform(df[['Sex']])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X1OUHPoFTkZC","executionInfo":{"status":"ok","timestamp":1716654722127,"user_tz":-360,"elapsed":40,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"60b8eb1b-5ca0-4f0e-d3f1-2cdf81b17e74"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["# Show all features value with Encoded value in an array\n","np.hstack((df[['Survived', 'Pclass', 'Age', 'Fare']].values, df_ohe))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OrJ0bcW_TtwA","executionInfo":{"status":"ok","timestamp":1716654722127,"user_tz":-360,"elapsed":37,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"62cf2e19-6f5b-4d42-fec2-6004255b625b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.    ,  3.    , 22.    ,  7.25  ,  1.    ],\n","       [ 1.    ,  1.    , 38.    , 71.2833,  0.    ],\n","       [ 1.    ,  3.    , 26.    ,  7.925 ,  0.    ],\n","       ...,\n","       [ 0.    ,  3.    , 28.    , 23.45  ,  0.    ],\n","       [ 1.    ,  1.    , 26.    , 30.    ,  1.    ],\n","       [ 0.    ,  3.    , 32.    ,  7.75  ,  1.    ]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Convert array to dataframe and rename Sex column to gender\n","Gender = pd.DataFrame(df_ohe, columns=['Gender'])\n","Gender.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XHWq0PKgUETI","executionInfo":{"status":"ok","timestamp":1716654722128,"user_tz":-360,"elapsed":36,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"3ea176ff-1d70-46a1-d273-d47daebd7f88"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Gender\n","0       1\n","1       0\n","2       0\n","3       0\n","4       1"],"text/html":["\n","  <div id=\"df-de961f68-a9a7-446f-bd75-ee18b4806109\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de961f68-a9a7-446f-bd75-ee18b4806109')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de961f68-a9a7-446f-bd75-ee18b4806109 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de961f68-a9a7-446f-bd75-ee18b4806109');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-52a83355-7baa-4ce6-a6a0-23cdeb12468f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-52a83355-7baa-4ce6-a6a0-23cdeb12468f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-52a83355-7baa-4ce6-a6a0-23cdeb12468f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Gender","summary":"{\n  \"name\": \"Gender\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Concate gender column and drop sex column\n","dataset = pd.concat([df,Gender], axis=1).drop(columns=['Sex'])\n","dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"maAIfmW6UMx-","executionInfo":{"status":"ok","timestamp":1716654722129,"user_tz":-360,"elapsed":35,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"4166b95f-c7e7-4146-e935-28df16876a7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Survived  Pclass     Fare   Age  Gender\n","0           0       3   7.2500  22.0       1\n","1           1       1  71.2833  38.0       0\n","2           1       3   7.9250  26.0       0\n","3           1       1  53.1000  35.0       0\n","4           0       3   8.0500  35.0       1\n","..        ...     ...      ...   ...     ...\n","886         0       2  13.0000  27.0       1\n","887         1       1  30.0000  19.0       0\n","888         0       3  23.4500  28.0       0\n","889         1       1  30.0000  26.0       1\n","890         0       3   7.7500  32.0       1\n","\n","[891 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-359cf6ab-a752-4917-a89d-b9af6cbeb85b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Fare</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>7.2500</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>71.2833</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>7.9250</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>53.1000</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8.0500</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>13.0000</td>\n","      <td>27.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30.0000</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>23.4500</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30.0000</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>7.7500</td>\n","      <td>32.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows Ã— 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-359cf6ab-a752-4917-a89d-b9af6cbeb85b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-359cf6ab-a752-4917-a89d-b9af6cbeb85b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-359cf6ab-a752-4917-a89d-b9af6cbeb85b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5c7fa964-591b-4e95-b8fb-5b9b73db04de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c7fa964-591b-4e95-b8fb-5b9b73db04de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5c7fa964-591b-4e95-b8fb-5b9b73db04de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d7c37475-2a5a-4f8c-ac14-f641b8441f51\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dataset')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d7c37475-2a5a-4f8c-ac14-f641b8441f51 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dataset');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.019696550973201,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Rename dataset to df\n","df = dataset\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"0fCxutelUQda","executionInfo":{"status":"ok","timestamp":1716654722130,"user_tz":-360,"elapsed":34,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"8da63881-899d-461a-b9d0-724d0cd46bfa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Survived  Pclass     Fare   Age  Gender\n","0           0       3   7.2500  22.0       1\n","1           1       1  71.2833  38.0       0\n","2           1       3   7.9250  26.0       0\n","3           1       1  53.1000  35.0       0\n","4           0       3   8.0500  35.0       1\n","..        ...     ...      ...   ...     ...\n","886         0       2  13.0000  27.0       1\n","887         1       1  30.0000  19.0       0\n","888         0       3  23.4500  28.0       0\n","889         1       1  30.0000  26.0       1\n","890         0       3   7.7500  32.0       1\n","\n","[891 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-b1f2dba2-092d-41e3-a969-93bf312888ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Fare</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>7.2500</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>71.2833</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>7.9250</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>53.1000</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8.0500</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>13.0000</td>\n","      <td>27.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30.0000</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>23.4500</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30.0000</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>7.7500</td>\n","      <td>32.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows Ã— 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1f2dba2-092d-41e3-a969-93bf312888ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1f2dba2-092d-41e3-a969-93bf312888ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1f2dba2-092d-41e3-a969-93bf312888ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35b0b32a-7413-4301-94a0-1b031f320608\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35b0b32a-7413-4301-94a0-1b031f320608')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35b0b32a-7413-4301-94a0-1b031f320608 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2c2e72ed-3d44-4b0a-adbf-1f658a881ec0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2c2e72ed-3d44-4b0a-adbf-1f658a881ec0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.019696550973201,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Define input and output/target features\n","X = df.drop(['Survived'], axis=1)\n","y = df['Survived']"],"metadata":{"id":"jtIHiWgIUX4X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply Scaler for input/independent features\n","from sklearn.preprocessing import StandardScaler\n","scale = StandardScaler()"],"metadata":{"id":"Vd5Mu4i1UdK4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scale input/independent features\n","X_scale = scale.fit_transform(X)\n","X_scale"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HK6PGfTUUicR","executionInfo":{"status":"ok","timestamp":1716654722134,"user_tz":-360,"elapsed":34,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"70dbf2e7-f206-4dd5-b3d7-9c0b2dad9165"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.82737724, -0.50244517, -0.56573646,  0.73769513],\n","       [-1.56610693,  0.78684529,  0.66386103, -1.35557354],\n","       [ 0.82737724, -0.48885426, -0.25833709, -1.35557354],\n","       ...,\n","       [ 0.82737724, -0.17626324, -0.1046374 , -1.35557354],\n","       [-1.56610693, -0.04438104, -0.25833709,  0.73769513],\n","       [ 0.82737724, -0.49237783,  0.20276197,  0.73769513]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# Apply SMOTE on X and y\n","from imblearn.over_sampling import SMOTE\n","smote = SMOTE()"],"metadata":{"id":"sfCeZz-FUz4C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_resampled, y_resampled = smote.fit_resample(X_scale, y)"],"metadata":{"id":"tRmoSTJzU1wu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Split train and test data\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.2, random_state=42)"],"metadata":{"id":"7DhTixiRU7Ff"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply KNN\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import accuracy_score, f1_score"],"metadata":{"id":"O7qGhtZ8Vb2C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Observe KNN performance and pick the best performed K value\n","accuracy_train_list = []\n","accuracy_test_list  = []\n","f1_train_list       = []\n","f1_test_list        = []\n","\n","for i in range(3, 13):\n","  print('k', i)\n","\n","  KNN = KNeighborsClassifier(n_neighbors=i)\n","  KNN.fit(X_resampled, y_resampled)\n","\n","  y_pred_train        = KNN.predict(X_train)\n","\n","  accuracy_train      = accuracy_score(y_pred_train, y_train)\n","  accuracy_train_list.append(accuracy_train)\n","\n","  f1_train = f1_score(y_pred_train, y_train)\n","  f1_train_list.append(f1_train)\n","\n","\n","\n","  y_pred_test = KNN.predict(X_test)\n","\n","  accuracy_test = accuracy_score(y_pred_test, y_test)\n","  accuracy_test_list.append(accuracy_test)\n","\n","  f1_test = f1_score(y_pred_test, y_test)\n","  f1_test_list.append(f1_test)\n","\n","  print(accuracy_train, accuracy_test)\n","  print(f1_train, f1_test, '\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t41_BhuAV5GE","executionInfo":{"status":"ok","timestamp":1716654723053,"user_tz":-360,"elapsed":948,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"54fe5566-2779-4737-c810-73b0ce769803"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["k 3\n","0.9020501138952164 0.9181818181818182\n","0.9002320185614849 0.9237288135593219 \n","\n","k 4\n","0.8644646924829157 0.9\n","0.852540272614622 0.9009009009009009 \n","\n","k 5\n","0.8530751708428246 0.9090909090909091\n","0.8487690504103165 0.9145299145299145 \n","\n","k 6\n","0.8530751708428246 0.8954545454545455\n","0.8424908424908425 0.8995633187772925 \n","\n","k 7\n","0.8507972665148064 0.8772727272727273\n","0.8474970896391151 0.8841201716738197 \n","\n","k 8\n","0.8439635535307517 0.8909090909090909\n","0.833939393939394 0.8938053097345133 \n","\n","k 9\n","0.835990888382688 0.8772727272727273\n","0.8317757009345794 0.8860759493670887 \n","\n","k 10\n","0.8325740318906606 0.8681818181818182\n","0.822249093107618 0.8755364806866952 \n","\n","k 11\n","0.8291571753986332 0.8545454545454545\n","0.8255813953488371 0.865546218487395 \n","\n","k 12\n","0.8280182232346242 0.8636363636363636\n","0.8182912154031289 0.8706896551724138 \n","\n"]}]},{"cell_type":"code","source":["# Import GridSearchCV\n","from sklearn.model_selection import GridSearchCV"],"metadata":{"id":"Nitf_EV0X9gJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply GridSearchCV\n","parameters = {'n_neighbors':list(range(3,13))}\n","KNN = KNeighborsClassifier()\n","clf = GridSearchCV(KNN, parameters)\n","clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":118},"id":"O5rLozrTYeEq","executionInfo":{"status":"ok","timestamp":1716654723780,"user_tz":-360,"elapsed":729,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"963f2aeb-50d6-4c5b-9f2b-1dd8afa16d75"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(estimator=KNeighborsClassifier(),\n","             param_grid={'n_neighbors': [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]})"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=KNeighborsClassifier(),\n","             param_grid={&#x27;n_neighbors&#x27;: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=KNeighborsClassifier(),\n","             param_grid={&#x27;n_neighbors&#x27;: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# Which iteration of K's accuracy is best\n","clf.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H_fN-1I5adTi","executionInfo":{"status":"ok","timestamp":1716654723781,"user_tz":-360,"elapsed":12,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"916cbaa7-adf5-4ad4-d49a-ca1696edaae3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_neighbors': 4}"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["#**K Nearest Neighbors**"],"metadata":{"id":"7ylSHKrHcr4k"}},{"cell_type":"code","source":["# Apply KNN on best performed K value\n","KNN = KNeighborsClassifier(n_neighbors=4)\n","KNN.fit(X_train, y_train)\n","\n","y_pred_train = KNN.predict(X_train)\n","accuracy_train = accuracy_score(y_pred_train, y_train)\n","f1_train = f1_score(y_pred_train, y_train)\n","\n","y_pred_test = KNN.predict(X_test)\n","accuracy_test = accuracy_score(y_pred_test, y_test)\n","f1_test = f1_score(y_pred_test, y_test)"],"metadata":{"id":"glObjq2PWCDl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply Classification Report\n","from sklearn.metrics import classification_report\n","target_names = ['Survived', 'Not Survived']"],"metadata":{"id":"29Dg1Y10Ws-M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Show the over all performance on train data\n","print('Train Data of KNN: ','\\n')\n","print('Accuracy on Train Data: ', accuracy_train, '\\n')\n","print('F1_Score on Train Data: ', f1_train, '\\n')\n","print('Classification Report on Train Data: ', '\\n', '\\n', classification_report(y_train, y_pred_train, target_names=target_names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0JDTxVdJXFwq","executionInfo":{"status":"ok","timestamp":1716654792644,"user_tz":-360,"elapsed":3,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"cdbf3350-7e28-49d4-a4a0-5128933f8d30"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Data of KNN:  \n","\n","Accuracy on Train Data:  0.857630979498861 \n","\n","F1_Score on Train Data:  0.8435544430538172 \n","\n","Classification Report on Train Data:  \n"," \n","               precision    recall  f1-score   support\n","\n","    Survived       0.81      0.93      0.87       446\n","Not Survived       0.92      0.78      0.84       432\n","\n","    accuracy                           0.86       878\n","   macro avg       0.87      0.86      0.86       878\n","weighted avg       0.87      0.86      0.86       878\n","\n"]}]},{"cell_type":"code","source":["# Show the over all performance on test data\n","print('Test Data of KNN: ','\\n')\n","print('Accuracy on Test Data: ', accuracy_test, '\\n' )\n","print('F1 Score on Test Data: ', f1_test, '\\n')\n","print('Classification Report on Test Data: ', '\\n','\\n', classification_report(y_test, y_pred_test, target_names=target_names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tws0xmzaXTko","executionInfo":{"status":"ok","timestamp":1716654802026,"user_tz":-360,"elapsed":405,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"fbdf4659-e30f-43da-8a6c-e9728962542a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Data of KNN:  \n","\n","Accuracy on Test Data:  0.8318181818181818 \n","\n","F1 Score on Test Data:  0.8340807174887892 \n","\n","Classification Report on Test Data:  \n"," \n","               precision    recall  f1-score   support\n","\n","    Survived       0.79      0.87      0.83       103\n","Not Survived       0.88      0.79      0.83       117\n","\n","    accuracy                           0.83       220\n","   macro avg       0.83      0.83      0.83       220\n","weighted avg       0.84      0.83      0.83       220\n","\n"]}]},{"cell_type":"code","source":["# Apply Confusion Matrix\n","from sklearn.metrics import confusion_matrix\n","c_train = confusion_matrix(y_pred_train, y_train)\n","c_test  = confusion_matrix(y_pred_test, y_test)"],"metadata":{"id":"WkJxsTeEXhNY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Results of Confusion Matrix on train and test data\n","print('Confusion Matrix on Train Data: ','\\n', c_train, '\\n')\n","print('Confusion Matrix on Test  Data: ', '\\n', c_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wq4Db8mBX3pN","executionInfo":{"status":"ok","timestamp":1716654809565,"user_tz":-360,"elapsed":5,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"980c2eb0-209c-4d4d-9028-f3d799e6ae03"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix on Train Data:  \n"," [[416  95]\n"," [ 30 337]] \n","\n","Confusion Matrix on Test  Data:  \n"," [[90 24]\n"," [13 93]]\n"]}]},{"cell_type":"code","source":["# Apply heatmap on train Data\n","sns.heatmap(c_train, annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"BG4h_pjCX76u","executionInfo":{"status":"ok","timestamp":1716654813549,"user_tz":-360,"elapsed":736,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"5b45ff4a-59d1-45c6-f888-271d8bacab6e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Apply heatmap on test Data\n","sns.heatmap(c_test, annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"_5yO-ZV6YEwA","executionInfo":{"status":"ok","timestamp":1716654815247,"user_tz":-360,"elapsed":715,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"71a5f9ae-c7c5-4031-860e-e6f1864ef133"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"Tp4Kst4XYItj"},"execution_count":null,"outputs":[]}]}